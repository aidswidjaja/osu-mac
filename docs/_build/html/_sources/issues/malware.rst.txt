#############################################
osu! is being detected as malware
#############################################

.. rst-class:: wineskin-version
    
    | This article is applicable to the following wrappers:
    | • `slc <https://osu.ppy.sh/users/7978076>`_'s `Wineskin for macOS 10.14 Mojave and earlier <https://osu.ppy.sh/community/forums/topics/682197?start=6919344>`_
    | • `Technocoder <https://osu.ppy.sh/users/10338558>`_'s `Wineskin with macOS Catalina 10.15 support <https://osu.ppy.sh/community/forums/topics/1106057>`_
    | • `Technocoder <https://osu.ppy.sh/users/10338558>`_'s `unofficial Wineskin for macOS 10.14 Mojave and earlier <https://osu.ppy.sh/community/forums/topics/682197>`_

****

****************************************
Behaviour
****************************************

Your anti-virus software detects your osu! wrapper as malware (usually a trojan).

****

****************************************
Cause
****************************************

Rest assured, osu! isn't bundled with any malware. It's just a false positive. See `Gcenx's explanation <https://github.com/Gcenx/WineskinServer/issues/48>`_ below:

    Since around Wine-4.8 mingw-w64 has become required to cross-compile wine components.
    As your lightly not aware mingw-64 is a cross-compiling toolchain allows you to compile Windows binaries on no Windows systems.

    Wine now provides functional replacements for real Windows binaries, now most anti-virus like for example Norton Endpoint Security see the file let’s say regedit.exe and notice is a PE binary but not a known release from Microsoft so it’s auto flagged.

    Now much older versions of wine that were not compiled in this manner, instead wine provided fake Windows binaries, lets usr the above example regedit.exe is just loads regedit.so.

    The problem with using none PE binaries is some software expects a real PE binary a fake one doesn’t suffice.

For more information, see...

- this `GitHub issue <https://github.com/Gcenx/WineskinServer/issues/48>`_.
- this `Steam Community forum thread <https://steamcommunity.com/app/221410/discussions/0/1627412171715145835/?ctp=2>`_ about Valve Proton (which runs on Wine)
- this `Wine forum thread <https://forum.winehq.org/viewtopic.php?t=33444&p=126362>`_
- and this `CodeWeavers forum thread <https://www.codeweavers.com/support/forums/general?t=27;msg=221839>`_ - CodeWeavers are a commercial company who both use and contribute heavily to Wine

****

****************************************
Resolution
****************************************

You'll need to dismiss your anti-virus and allow osu! to run. This can usually done by explicitly allowing osu! to run or excluding it from virus scans. Instructions for common antivirus products are below:

- `Norton <https://support.norton.com/sp/en/us/home/current/solutions/kb20100222230832EN>`_
- `McAfee <https://service.mcafee.com/webcenter/portal/oracle/webcenter/page/scopedMD/s55728c97_466d_4ddb_952d_05484ea932c6/Page29.jspx?wc.contextURL=%2Fspaces%2Fcp&articleId=TS102056&_afrLoop=340749952620150&leftWidth=0%25&showFooter=false&showHeader=false&rightWidth=0%25&centerWidth=100%25>`_
- `Malwarebytes <https://forums.malwarebytes.com/topic/263271-cant-add-exclusions/>`_ (currently not possible, but generally speaking you should be able to disable Real-Time Protection and osu! should run)
- `Avast <https://support.avast.com/en-ww/article/168/>`_
- `Kaspersky Internet Security <https://support.kaspersky.com/13800#block1>`_

.. tip::

    It is not necessarily to report/contact osu! as a false positive to your anti-virus product, you only need to permit osu! to run. Hopefully in the future anti-virus programs will `whitelist <https://en.wikipedia.org/wiki/Whitelisting>`_ Wine, but this is an `upstream <https://en.wikipedia.org/wiki/Upstream_(software_development)>`_ issue.

****

****************************************
If that didn't work
****************************************

There could be something else going on here, and performing `basic troubleshooting <troubleshooting.html>`_ should help you get to the bottom of it.

If you're still not sure what's going on here, copy any osu! crash logs and `generate a report with osu!macOS Agent <troubleshooting.html#generating-a-report-with-osu-macos-agent>`_, then let us know on the forums with what we can help.